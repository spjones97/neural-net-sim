{"ast":null,"code":"import _slicedToArray from\"C:/Users/Spencer/source/neural-net-sim/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"../styles.css\";import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,ComposedChart,Legend,Bar,ResponsiveContainer}from\"recharts\";import React,{useState}from\"react\";import Navigation from'./Navigation';import{data}from\"./Data\";import{data2}from\"./Data\";import{data3}from\"./Data\";// import { data4 } from \"./Data\";\n// import { data5 } from \"./Data\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function SubflowUI(){// Set AlexNet as the default vesion\nvar _useState=useState(data[0]),_useState2=_slicedToArray(_useState,2),inferenceGPU=_useState2[0],setInferenceGPU=_useState2[1];var _useState3=useState(data[2]),_useState4=_slicedToArray(_useState3,2),inferenceCPU=_useState4[0],setInferenceCPU=_useState4[1];var _useState5=useState(data[4]),_useState6=_slicedToArray(_useState5,2),trainingGPU=_useState6[0],setTrainingGPU=_useState6[1];var _useState7=useState(data[1]),_useState8=_slicedToArray(_useState7,2),inference=_useState8[0],setInference=_useState8[1];var _useState9=useState(data[5]),_useState10=_slicedToArray(_useState9,2),training=_useState10[0],setTraining=_useState10[1];// const [topData, setTopData] = useState(data);\n// const [bottomData, setBottomData] = useState(data2);\nvar handleChange=function handleChange(e){switch(e.target.id){case\"AlexNet\":{console.log(\"alex\");// setTopData(data);\n// setBottomData(data2);\nsetInferenceGPU(data[0]);setInferenceCPU(data[2]);setTrainingGPU(data[4]);setInference(data[1]);setTraining(data[5]);break;}case\"KWS\":{console.log(\"KWS\");// setTopData(data3);\n// setBottomData(data4);\nsetInferenceGPU(data2[0]);setInferenceCPU(data2[2]);setTrainingGPU(data2[4]);setInference(data2[1]);setTraining(data2[5]);break;}case\"LeNet\":{console.log(\"LeNet\");// setTopData(data);\n// setBottomData(data5);\nsetInferenceGPU(data3[0]);setInferenceCPU(data3[2]);setTrainingGPU(data3[4]);setInference(data3[1]);setTraining(data3[5]);break;}default:{break;}}};console.log(\"inference\");console.log(inference);console.log(\"inference CPU\");console.log(inferenceCPU);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navigation,{}),/*#__PURE__*/_jsx(\"section\",{className:\"section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"DNN Models\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"columns\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"column\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"box\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"DNN\",id:\"LeNet\",onChange:handleChange}),\"Le-Net5 (MNIST)\"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{className:\"radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",onChange:handleChange,name:\"DNN\",id:\"AlexNet\"}),\"AlexNet (CIFAR-10)\"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{className:\"radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"DNN\",id:\"KWS\",onChange:handleChange}),\"KWS (GSC)\"]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"column\",children:/*#__PURE__*/_jsx(\"div\",{className:\"box\",children:\"Image Here\"})}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"column\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"subtitle is-2\",children:\"Inference (GPU)\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"box\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:700,children:/*#__PURE__*/_jsxs(LineChart,{width:400,height:400,data:inferenceGPU,margin:{top:5,right:20,left:10,bottom:5},children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#f5f5f5\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"exec\",stroke:\"#ff7300\",yAxisId:0}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"exec_ns\",stroke:\"#387908\",yAxisId:1})]})})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"column\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"subtitle is-2\",children:\"Inference (CPU)\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"box\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:700,children:/*#__PURE__*/_jsxs(LineChart,{width:400,height:400,data:inferenceCPU,margin:{top:5,right:20,left:10,bottom:5},children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#f5f5f5\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"acc\",stroke:\"#ff7300\",yAxisId:0}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"acc_ns\",stroke:\"#387908\",yAxisId:1})]})})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"column\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"subtitle is-2\",children:\"Training (GPU)\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"box\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:700,children:/*#__PURE__*/_jsxs(LineChart,{width:400,height:400,data:trainingGPU,margin:{top:5,right:20,left:10,bottom:5},children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#f5f5f5\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"exec\",stroke:\"#ff7300\",yAxisId:0}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"exec_ns\",stroke:\"#387908\",yAxisId:1})]})})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"column\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"subtitle is-2\",children:\"Inference\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"box\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:700,children:/*#__PURE__*/_jsxs(ComposedChart,{width:500,height:400,data:inference,margin:{top:20,right:20,bottom:20,left:20},children:[/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#f5f5f5\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\",scale:\"band\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"exec\",barSize:20,fill:\"#413ea0\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"exec_ns\",stroke:\"#ff7300\"})]})})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"column\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"subtitle is-2\",children:\"Training\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"box\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:700,children:/*#__PURE__*/_jsxs(ComposedChart,{width:500,height:400,data:training,margin:{top:20,right:20,bottom:20,left:20},children:[/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#f5f5f5\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\",scale:\"band\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"acc\",barSize:20,fill:\"#413ea0\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"acc_ns\",stroke:\"#ff7300\"})]})})})]})})]})})]});}","map":{"version":3,"sources":["C:/Users/Spencer/source/neural-net-sim/src/components/SubflowUI.tsx"],"names":["LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ComposedChart","Legend","Bar","ResponsiveContainer","React","useState","Navigation","data","data2","data3","SubflowUI","inferenceGPU","setInferenceGPU","inferenceCPU","setInferenceCPU","trainingGPU","setTrainingGPU","inference","setInference","training","setTraining","handleChange","e","target","id","console","log","top","right","left","bottom"],"mappings":"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","sourcesContent":["import \"../styles.css\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ComposedChart,\r\n  Legend,\r\n  Bar,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport React, { useState } from \"react\";\r\nimport Navigation from './Navigation';\r\n\r\nimport { data } from \"./Data\";\r\nimport { data2 } from \"./Data\";\r\nimport { data3 } from \"./Data\";\r\n// import { data4 } from \"./Data\";\r\n// import { data5 } from \"./Data\";\r\n\r\nexport default function SubflowUI() {\r\n\r\n  // Set AlexNet as the default vesion\r\n  const [inferenceGPU, setInferenceGPU] = useState(data[0]);\r\n  const [inferenceCPU, setInferenceCPU] = useState(data[2]);\r\n  const [trainingGPU, setTrainingGPU] = useState(data[4]);\r\n  const [inference, setInference] = useState(data[1]);\r\n  const [training, setTraining] = useState(data[5]);\r\n  // const [topData, setTopData] = useState(data);\r\n  // const [bottomData, setBottomData] = useState(data2);\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    switch (e.target.id) {\r\n      case \"AlexNet\": {\r\n        console.log(\"alex\");\r\n        // setTopData(data);\r\n        // setBottomData(data2);\r\n        setInferenceGPU(data[0]);\r\n        setInferenceCPU(data[2]);\r\n        setTrainingGPU(data[4]);\r\n        setInference(data[1]);\r\n        setTraining(data[5]);\r\n        break;\r\n      }\r\n      case \"KWS\": {\r\n        console.log(\"KWS\");\r\n        // setTopData(data3);\r\n        // setBottomData(data4);\r\n        setInferenceGPU(data2[0]);\r\n        setInferenceCPU(data2[2]);\r\n        setTrainingGPU(data2[4]);\r\n        setInference(data2[1]);\r\n        setTraining(data2[5]);\r\n        break;\r\n      }\r\n      case \"LeNet\": {\r\n        console.log(\"LeNet\");\r\n        // setTopData(data);\r\n        // setBottomData(data5);\r\n        setInferenceGPU(data3[0]);\r\n        setInferenceCPU(data3[2]);\r\n        setTrainingGPU(data3[4]);\r\n        setInference(data3[1]);\r\n        setTraining(data3[5]);\r\n        break;\r\n      }\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n  };\r\nconsole.log(\"inference\");\r\nconsole.log(inference);\r\nconsole.log(\"inference CPU\");\r\nconsole.log(inferenceCPU);\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <section className=\"section\">\r\n        <div className=\"container\">\r\n          <h1 className=\"title\">DNN Models</h1>\r\n          <div className=\"columns\">\r\n            <div className=\"column\">\r\n              <div className=\"box\">\r\n                <label className=\"radio\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"DNN\"\r\n                    id=\"LeNet\"\r\n                    onChange={handleChange}\r\n                  ></input>\r\n                  Le-Net5 (MNIST)\r\n                </label>\r\n                <br></br>\r\n                <label className=\"radio\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    onChange={handleChange}\r\n                    name=\"DNN\"\r\n                    id=\"AlexNet\"\r\n                  ></input>\r\n                  AlexNet (CIFAR-10)\r\n                </label>\r\n                <br></br>\r\n                <label className=\"radio\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"DNN\"\r\n                    id=\"KWS\"\r\n                    onChange={handleChange}\r\n                  ></input>\r\n                  KWS (GSC)\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"column\">\r\n            <div className=\"box\">Image Here</div>\r\n          </div>\r\n          <br></br>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"column\">\r\n              <h2 className=\"subtitle is-2\">Inference (GPU)</h2>{\" \"}\r\n              <div className=\"box\">\r\n              <ResponsiveContainer width='100%' height={700}>\r\n              <LineChart\r\n                  width={400}\r\n                  height={400}\r\n                  data={inferenceGPU}\r\n                  margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\r\n                >\r\n                  <XAxis dataKey=\"name\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid stroke=\"#f5f5f5\" />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"exec\"\r\n                    stroke=\"#ff7300\"\r\n                    yAxisId={0}\r\n                  />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"exec_ns\"\r\n                    stroke=\"#387908\"\r\n                    yAxisId={1}\r\n                  />\r\n                </LineChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"column\">\r\n              <h2 className=\"subtitle is-2\">Inference (CPU)</h2>{\" \"}\r\n              <div className=\"box\">\r\n              <ResponsiveContainer width='100%' height={700}>\r\n                <LineChart\r\n                  width={400}\r\n                  height={400}\r\n                  data={inferenceCPU}\r\n                  margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\r\n                >\r\n                  <XAxis dataKey=\"name\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid stroke=\"#f5f5f5\" />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"acc\"\r\n                    stroke=\"#ff7300\"\r\n                    yAxisId={0}\r\n                  />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"acc_ns\"\r\n                    stroke=\"#387908\"\r\n                    yAxisId={1}\r\n                  />\r\n                </LineChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"column\">\r\n              <h2 className=\"subtitle is-2\">Training (GPU)</h2>{\" \"}\r\n              <div className=\"box\">\r\n              <ResponsiveContainer width='100%' height={700}>\r\n                <LineChart\r\n                  width={400}\r\n                  height={400}\r\n                  data={trainingGPU}\r\n                  margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\r\n                >\r\n                  <XAxis dataKey=\"name\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid stroke=\"#f5f5f5\" />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"exec\"\r\n                    stroke=\"#ff7300\"\r\n                    yAxisId={0}\r\n                  />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"exec_ns\"\r\n                    stroke=\"#387908\"\r\n                    yAxisId={1}\r\n                  />\r\n                </LineChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"column\">\r\n              <h2 className=\"subtitle is-2\">Inference</h2>{\" \"}\r\n              <div className=\"box\">\r\n              <ResponsiveContainer width='100%' height={700}>\r\n                <ComposedChart\r\n                  width={500}\r\n                  height={400}\r\n                  data={inference}\r\n                  margin={{\r\n                    top: 20,\r\n                    right: 20,\r\n                    bottom: 20,\r\n                    left: 20,\r\n                  }}\r\n                >\r\n                  <CartesianGrid stroke=\"#f5f5f5\" />\r\n                  <XAxis dataKey=\"name\" scale=\"band\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Legend />\r\n                  <Bar dataKey=\"exec\" barSize={20} fill=\"#413ea0\" />\r\n                  <Line type=\"monotone\" dataKey=\"exec_ns\" stroke=\"#ff7300\" />\r\n                </ComposedChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"column\">\r\n              <h2 className=\"subtitle is-2\">Training</h2>{\" \"}\r\n              <div className=\"box\">\r\n              <ResponsiveContainer width='100%' height={700}>\r\n                <ComposedChart\r\n                  width={500}\r\n                  height={400}\r\n                  data={training}\r\n                  margin={{\r\n                    top: 20,\r\n                    right: 20,\r\n                    bottom: 20,\r\n                    left: 20,\r\n                  }}\r\n                >\r\n                  <CartesianGrid stroke=\"#f5f5f5\" />\r\n                  <XAxis dataKey=\"name\" scale=\"band\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Legend />\r\n                  <Bar dataKey=\"acc\" barSize={20} fill=\"#413ea0\" />\r\n                  <Line type=\"monotone\" dataKey=\"acc_ns\" stroke=\"#ff7300\" />\r\n                </ComposedChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    </section>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}