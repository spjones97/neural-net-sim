{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deepCopy = void 0;\n\nvar cloneArrayBuffer_1 = require(\"./cloneArrayBuffer\");\n\nvar cloneDataView_1 = require(\"./cloneDataView\");\n\nvar cloneDate_1 = require(\"./cloneDate\");\n\nvar cloneRegexp_1 = require(\"./cloneRegexp\");\n\nvar cloneTypedArray_1 = require(\"./cloneTypedArray\");\n\nvar TypedArrayMap = {\n  \"[object Date]\": cloneDate_1.cloneDate,\n  \"[object ArrayBuffer]\": cloneArrayBuffer_1.cloneArrayBuffer,\n  \"[object DataView]\": cloneDataView_1.cloneDataView,\n  \"[object Float32Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Float64Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Int8Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Int16Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Int32Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Uint8Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Uint8ClampedArray]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Uint16Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object Uint32Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object BigInt64Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object BigUint64Array]\": cloneTypedArray_1.cloneTypedArray,\n  \"[object RegExp]\": cloneRegexp_1.cloneRegExp\n};\n/**\r\n * Deep copy function for TypeScript.\r\n * @param T Generic type of target/copied value.\r\n * @param target Target value to be copied.\r\n * @see Original source: ts-deepcopy https://github.com/ykdr2017/ts-deepcopy\r\n * @see Code pen https://codepen.io/erikvullings/pen/ejyBYg\r\n */\n\nfunction deepCopy(target) {\n  var tag = Object.prototype.toString.call(target);\n\n  if (TypedArrayMap[tag]) {\n    return TypedArrayMap[tag](target);\n  }\n\n  if (target === null) {\n    return target;\n  }\n\n  if (target instanceof Array) {\n    var cp_1 = [];\n    target.forEach(function (v) {\n      cp_1.push(v);\n    });\n    return cp_1.map(function (n) {\n      return deepCopy(n);\n    });\n  }\n\n  if (typeof target === \"object\" && target !== {}) {\n    var cp_2 = __assign({}, target);\n\n    Object.keys(cp_2).forEach(function (k) {\n      cp_2[k] = deepCopy(cp_2[k]);\n    });\n    return cp_2;\n  }\n\n  return target;\n}\n\nexports.deepCopy = deepCopy;","map":{"version":3,"sources":["C:/Users/Spencer/source/neural-net-sim/typescript-app/node_modules/deep-copy-ts/dist/index.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","deepCopy","cloneArrayBuffer_1","require","cloneDataView_1","cloneDate_1","cloneRegexp_1","cloneTypedArray_1","TypedArrayMap","cloneDate","cloneArrayBuffer","cloneDataView","cloneTypedArray","cloneRegExp","target","tag","toString","Array","cp_1","forEach","v","push","map","cp_2","keys","k"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.deepCopy = void 0;\r\nvar cloneArrayBuffer_1 = require(\"./cloneArrayBuffer\");\r\nvar cloneDataView_1 = require(\"./cloneDataView\");\r\nvar cloneDate_1 = require(\"./cloneDate\");\r\nvar cloneRegexp_1 = require(\"./cloneRegexp\");\r\nvar cloneTypedArray_1 = require(\"./cloneTypedArray\");\r\nvar TypedArrayMap = {\r\n    \"[object Date]\": cloneDate_1.cloneDate,\r\n    \"[object ArrayBuffer]\": cloneArrayBuffer_1.cloneArrayBuffer,\r\n    \"[object DataView]\": cloneDataView_1.cloneDataView,\r\n    \"[object Float32Array]\": cloneTypedArray_1.cloneTypedArray,\r\n    \"[object Float64Array]\": cloneTypedArray_1.cloneTypedArray,\r\n    \"[object Int8Array]\": cloneTypedArray_1.cloneTypedArray,\r\n    \"[object Int16Array]\": cloneTypedArray_1.cloneTypedArray,\r\n    \"[object Int32Array]\": cloneTypedArray_1.cloneTypedArray,\r\n    \"[object Uint8Array]\": cloneTypedArray_1.cloneTypedArray,\r\n    \"[object Uint8ClampedArray]\": cloneTypedArray_1.cloneTypedArray,\r\n    \"[object Uint16Array]\": cloneTypedArray_1.cloneTypedArray,\r\n    \"[object Uint32Array]\": cloneTypedArray_1.cloneTypedArray,\r\n    \"[object BigInt64Array]\": cloneTypedArray_1.cloneTypedArray,\r\n    \"[object BigUint64Array]\": cloneTypedArray_1.cloneTypedArray,\r\n    \"[object RegExp]\": cloneRegexp_1.cloneRegExp,\r\n};\r\n/**\r\n * Deep copy function for TypeScript.\r\n * @param T Generic type of target/copied value.\r\n * @param target Target value to be copied.\r\n * @see Original source: ts-deepcopy https://github.com/ykdr2017/ts-deepcopy\r\n * @see Code pen https://codepen.io/erikvullings/pen/ejyBYg\r\n */\r\nfunction deepCopy(target) {\r\n    var tag = Object.prototype.toString.call(target);\r\n    if (TypedArrayMap[tag]) {\r\n        return TypedArrayMap[tag](target);\r\n    }\r\n    if (target === null) {\r\n        return target;\r\n    }\r\n    if (target instanceof Array) {\r\n        var cp_1 = [];\r\n        target.forEach(function (v) {\r\n            cp_1.push(v);\r\n        });\r\n        return cp_1.map(function (n) { return deepCopy(n); });\r\n    }\r\n    if (typeof target === \"object\" && target !== {}) {\r\n        var cp_2 = __assign({}, target);\r\n        Object.keys(cp_2).forEach(function (k) {\r\n            cp_2[k] = deepCopy(cp_2[k]);\r\n        });\r\n        return cp_2;\r\n    }\r\n    return target;\r\n}\r\nexports.deepCopy = deepCopy;\r\n"]},"metadata":{},"sourceType":"script"}