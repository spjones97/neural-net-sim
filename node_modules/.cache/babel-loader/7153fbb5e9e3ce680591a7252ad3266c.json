{"ast":null,"code":"export var inference_gpu_execution_data=[];export var inference_gpu_accuracy_data=[];export var inference_cpu_execution_data=[];export var inference_cpu_accuracy_data=[];export var training_execution_data=[];export var training_accuracy_data=[];var ig_max=12;var ic_max=34;var t_max=18;/**\r\n * \r\n * @param {Number} f \r\n * @returns {Number}\r\n */function roundTo4(f){return Math.round(f*10000)/10000.0;}/**\r\n * \r\n * @param {Number} min \r\n * @param {Number} max \r\n * @returns {Number}\r\n */function getRandomArbitrary(min,max){return roundTo4(Math.random()*(max-min)+min);}export function generateData(){for(var i=0;i<100;i++){var name=i+1;var ig_deadline=getRandomArbitrary(5,15);var ic_deadline=getRandomArbitrary(20,40);var t_deadline=getRandomArbitrary(5,30);var ig_exec=ig_deadline<ig_max?roundTo4(getRandomArbitrary(0.8,0.99)*ig_deadline):roundTo4(0.9999*ig_deadline);var ig_exec_ns=ig_deadline<ig_max?0:ig_max;var ic_exec=ic_deadline<ic_max?roundTo4(getRandomArbitrary(0.8,0.99)*ic_deadline):roundTo4(0.9999*ic_deadline);var ic_exec_ns=ic_deadline<ic_max?0:ic_max;var t_exec=t_deadline<t_max?roundTo4(getRandomArbitrary(0.8,0.99)*t_deadline):roundTo4(0.9999*t_deadline);var t_exec_ns=t_deadline<t_max?0:t_max;var ig_acc=ig_deadline<ig_max&&ig_deadline/ig_max<0.83?roundTo4(1.2*ig_deadline/ig_max):0.9999;var ig_acc_ns=ig_deadline<ig_max?0:0.9999;var ic_acc=ic_deadline<ic_max&&ic_deadline/ic_max<0.83?roundTo4(1.2*ic_deadline/ic_max):0.9999;var ic_acc_ns=ic_deadline<ic_max?0:0.9999;var t_acc=t_deadline<t_max&&t_deadline/t_max<0.83?roundTo4(1.2*t_deadline/t_max):0.9999;var t_acc_ns=t_deadline<t_max?0:0.9999;inference_gpu_execution_data.push({name:\"\".concat(name),deadline:ig_deadline,exec:ig_exec,exec_ns:ig_exec_ns});inference_gpu_accuracy_data.push({name:\"\".concat(name),acc:ig_acc,acc_ns:ig_acc_ns});inference_cpu_execution_data.push({name:\"\".concat(name),deadline:ic_deadline,exec:ic_exec,exec_ns:ic_exec_ns});inference_cpu_accuracy_data.push({name:\"\".concat(name),acc:ic_acc,acc_ns:ic_acc_ns});training_execution_data.push({name:\"\".concat(name),deadline:t_deadline,exec:t_exec,exec_ns:t_exec_ns});training_accuracy_data.push({name:\"\".concat(name),acc:t_acc,acc_ns:t_acc_ns});}}","map":{"version":3,"sources":["C:/Users/Spencer/source/neural-net-sim/typescript-app/src/components/dataset.js"],"names":["inference_gpu_execution_data","inference_gpu_accuracy_data","inference_cpu_execution_data","inference_cpu_accuracy_data","training_execution_data","training_accuracy_data","ig_max","ic_max","t_max","roundTo4","f","Math","round","getRandomArbitrary","min","max","random","generateData","i","name","ig_deadline","ic_deadline","t_deadline","ig_exec","ig_exec_ns","ic_exec","ic_exec_ns","t_exec","t_exec_ns","ig_acc","ig_acc_ns","ic_acc","ic_acc_ns","t_acc","t_acc_ns","push","deadline","exec","exec_ns","acc","acc_ns"],"mappings":"AAAA,MAAO,IAAIA,CAAAA,4BAA4B,CAAG,EAAnC,CACP,MAAO,IAAIC,CAAAA,2BAA2B,CAAG,EAAlC,CACP,MAAO,IAAIC,CAAAA,4BAA4B,CAAG,EAAnC,CACP,MAAO,IAAIC,CAAAA,2BAA2B,CAAG,EAAlC,CACP,MAAO,IAAIC,CAAAA,uBAAuB,CAAG,EAA9B,CACP,MAAO,IAAIC,CAAAA,sBAAsB,CAAG,EAA7B,CAEP,GAAMC,CAAAA,MAAM,CAAG,EAAf,CACA,GAAMC,CAAAA,MAAM,CAAG,EAAf,CACA,GAAMC,CAAAA,KAAK,CAAG,EAAd,CAEA;AACA;AACA;AACA;AACA,GACC,QAASC,CAAAA,QAAT,CAAkBC,CAAlB,CAAqB,CAClB,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWF,CAAC,CAAC,KAAb,EAAoB,OAA3B,CACH,CAED;AACA;AACA;AACA;AACA;AACA,GACA,QAASG,CAAAA,kBAAT,CAA4BC,GAA5B,CAAiCC,GAAjC,CAAsC,CAClC,MAAON,CAAAA,QAAQ,CAACE,IAAI,CAACK,MAAL,IAAiBD,GAAG,CAAGD,GAAvB,EAA8BA,GAA/B,CAAf,CACH,CAED,MAAO,SAASG,CAAAA,YAAT,EAAwB,CAC3B,IAAI,GAAIC,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAG,GAAnB,CAAwBA,CAAC,EAAzB,CAA6B,CACzB,GAAIC,CAAAA,IAAI,CAAGD,CAAC,CAAC,CAAb,CACA,GAAIE,CAAAA,WAAW,CAAGP,kBAAkB,CAAC,CAAD,CAAI,EAAJ,CAApC,CACA,GAAIQ,CAAAA,WAAW,CAAGR,kBAAkB,CAAC,EAAD,CAAK,EAAL,CAApC,CACA,GAAIS,CAAAA,UAAU,CAAGT,kBAAkB,CAAC,CAAD,CAAI,EAAJ,CAAnC,CACA,GAAIU,CAAAA,OAAO,CAAIH,WAAW,CAAGd,MAAf,CAAyBG,QAAQ,CAACI,kBAAkB,CAAC,GAAD,CAAM,IAAN,CAAlB,CAAgCO,WAAjC,CAAjC,CAAiFX,QAAQ,CAAC,OAASW,WAAV,CAAvG,CACA,GAAII,CAAAA,UAAU,CAAIJ,WAAW,CAAGd,MAAf,CAAyB,CAAzB,CAA6BA,MAA9C,CACA,GAAImB,CAAAA,OAAO,CAAIJ,WAAW,CAAGd,MAAf,CAAyBE,QAAQ,CAACI,kBAAkB,CAAC,GAAD,CAAM,IAAN,CAAlB,CAAgCQ,WAAjC,CAAjC,CAAiFZ,QAAQ,CAAC,OAASY,WAAV,CAAvG,CACA,GAAIK,CAAAA,UAAU,CAAIL,WAAW,CAAGd,MAAf,CAAyB,CAAzB,CAA6BA,MAA9C,CACA,GAAIoB,CAAAA,MAAM,CAAIL,UAAU,CAAGd,KAAd,CAAuBC,QAAQ,CAACI,kBAAkB,CAAC,GAAD,CAAM,IAAN,CAAlB,CAAgCS,UAAjC,CAA/B,CAA8Eb,QAAQ,CAAC,OAASa,UAAV,CAAnG,CACA,GAAIM,CAAAA,SAAS,CAAIN,UAAU,CAAGd,KAAd,CAAuB,CAAvB,CAA2BA,KAA3C,CACA,GAAIqB,CAAAA,MAAM,CAAIT,WAAW,CAAGd,MAAd,EAAwBc,WAAW,CAACd,MAAZ,CAAqB,IAA9C,CAAsDG,QAAQ,CAAC,IAAMW,WAAN,CAAkBd,MAAnB,CAA9D,CAA2F,MAAxG,CACA,GAAIwB,CAAAA,SAAS,CAAIV,WAAW,CAAGd,MAAf,CAAyB,CAAzB,CAA6B,MAA7C,CACA,GAAIyB,CAAAA,MAAM,CAAIV,WAAW,CAAGd,MAAd,EAAwBc,WAAW,CAACd,MAAZ,CAAqB,IAA9C,CAAsDE,QAAQ,CAAC,IAAMY,WAAN,CAAkBd,MAAnB,CAA9D,CAA2F,MAAxG,CACA,GAAIyB,CAAAA,SAAS,CAAIX,WAAW,CAAGd,MAAf,CAAyB,CAAzB,CAA6B,MAA7C,CACA,GAAI0B,CAAAA,KAAK,CAAIX,UAAU,CAAGd,KAAb,EAAsBc,UAAU,CAACd,KAAX,CAAmB,IAA1C,CAAkDC,QAAQ,CAAC,IAAMa,UAAN,CAAiBd,KAAlB,CAA1D,CAAqF,MAAjG,CACA,GAAI0B,CAAAA,QAAQ,CAAIZ,UAAU,CAAGd,KAAd,CAAuB,CAAvB,CAA2B,MAA1C,CAEAR,4BAA4B,CAACmC,IAA7B,CAAkC,CAC9BhB,IAAI,WAAKA,IAAL,CAD0B,CAE9BiB,QAAQ,CAAEhB,WAFoB,CAG9BiB,IAAI,CAAEd,OAHwB,CAI9Be,OAAO,CAAEd,UAJqB,CAAlC,EAMAvB,2BAA2B,CAACkC,IAA5B,CAAiC,CAC7BhB,IAAI,WAAKA,IAAL,CADyB,CAE7BoB,GAAG,CAAEV,MAFwB,CAG7BW,MAAM,CAAEV,SAHqB,CAAjC,EAKA5B,4BAA4B,CAACiC,IAA7B,CAAkC,CAC9BhB,IAAI,WAAKA,IAAL,CAD0B,CAE9BiB,QAAQ,CAAEf,WAFoB,CAG9BgB,IAAI,CAAEZ,OAHwB,CAI9Ba,OAAO,CAAEZ,UAJqB,CAAlC,EAMAvB,2BAA2B,CAACgC,IAA5B,CAAiC,CAC7BhB,IAAI,WAAKA,IAAL,CADyB,CAE7BoB,GAAG,CAAER,MAFwB,CAG7BS,MAAM,CAAER,SAHqB,CAAjC,EAKA5B,uBAAuB,CAAC+B,IAAxB,CAA6B,CACzBhB,IAAI,WAAKA,IAAL,CADqB,CAEzBiB,QAAQ,CAAEd,UAFe,CAGzBe,IAAI,CAAEV,MAHmB,CAIzBW,OAAO,CAAEV,SAJgB,CAA7B,EAMAvB,sBAAsB,CAAC8B,IAAvB,CAA4B,CACxBhB,IAAI,WAAKA,IAAL,CADoB,CAExBoB,GAAG,CAAEN,KAFmB,CAGxBO,MAAM,CAAEN,QAHgB,CAA5B,EAKH,CACJ","sourcesContent":["export let inference_gpu_execution_data = [];\r\nexport let inference_gpu_accuracy_data = [];\r\nexport let inference_cpu_execution_data = [];\r\nexport let inference_cpu_accuracy_data = [];\r\nexport let training_execution_data = [];\r\nexport let training_accuracy_data = [];\r\n\r\nconst ig_max = 12;\r\nconst ic_max = 34;\r\nconst t_max = 18;\r\n\r\n/**\r\n * \r\n * @param {Number} f \r\n * @returns {Number}\r\n */\r\n function roundTo4(f) {\r\n    return Math.round(f*10000)/10000.0;\r\n}\r\n\r\n/**\r\n * \r\n * @param {Number} min \r\n * @param {Number} max \r\n * @returns {Number}\r\n */\r\nfunction getRandomArbitrary(min, max) {\r\n    return roundTo4(Math.random() * (max - min) + min);\r\n}\r\n\r\nexport function generateData() {\r\n    for(let i = 0; i < 100; i++) {\r\n        let name = i+1;\r\n        let ig_deadline = getRandomArbitrary(5, 15);\r\n        let ic_deadline = getRandomArbitrary(20, 40);\r\n        let t_deadline = getRandomArbitrary(5, 30);\r\n        let ig_exec = (ig_deadline < ig_max) ? roundTo4(getRandomArbitrary(0.8, 0.99) * ig_deadline) : roundTo4(0.9999 * ig_deadline);\r\n        let ig_exec_ns = (ig_deadline < ig_max) ? 0 : ig_max;\r\n        let ic_exec = (ic_deadline < ic_max) ? roundTo4(getRandomArbitrary(0.8, 0.99) * ic_deadline) : roundTo4(0.9999 * ic_deadline);\r\n        let ic_exec_ns = (ic_deadline < ic_max) ? 0 : ic_max;\r\n        let t_exec = (t_deadline < t_max) ? roundTo4(getRandomArbitrary(0.8, 0.99) * t_deadline) : roundTo4(0.9999 * t_deadline);\r\n        let t_exec_ns = (t_deadline < t_max) ? 0 : t_max;\r\n        let ig_acc = (ig_deadline < ig_max && ig_deadline/ig_max < 0.83) ? roundTo4(1.2 * ig_deadline/ig_max) : 0.9999;\r\n        let ig_acc_ns = (ig_deadline < ig_max) ? 0 : 0.9999;\r\n        let ic_acc = (ic_deadline < ic_max && ic_deadline/ic_max < 0.83) ? roundTo4(1.2 * ic_deadline/ic_max) : 0.9999;\r\n        let ic_acc_ns = (ic_deadline < ic_max) ? 0 : 0.9999;\r\n        let t_acc = (t_deadline < t_max && t_deadline/t_max < 0.83) ? roundTo4(1.2 * t_deadline/t_max) : 0.9999;\r\n        let t_acc_ns = (t_deadline < t_max) ? 0 : 0.9999;\r\n    \r\n        inference_gpu_execution_data.push({\r\n            name: `${name}`, \r\n            deadline: ig_deadline, \r\n            exec: ig_exec, \r\n            exec_ns: ig_exec_ns,\r\n        });\r\n        inference_gpu_accuracy_data.push({\r\n            name: `${name}`,\r\n            acc: ig_acc,\r\n            acc_ns: ig_acc_ns\r\n        });\r\n        inference_cpu_execution_data.push({\r\n            name: `${name}`, \r\n            deadline: ic_deadline, \r\n            exec: ic_exec, \r\n            exec_ns: ic_exec_ns,\r\n        });\r\n        inference_cpu_accuracy_data.push({\r\n            name: `${name}`,\r\n            acc: ic_acc,\r\n            acc_ns: ic_acc_ns\r\n        });\r\n        training_execution_data.push({\r\n            name: `${name}`, \r\n            deadline: t_deadline, \r\n            exec: t_exec, \r\n            exec_ns: t_exec_ns,\r\n        });\r\n        training_accuracy_data.push({\r\n            name: `${name}`,\r\n            acc: t_acc,\r\n            acc_ns: t_acc_ns\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}