{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cloneTypedArray = void 0;\n\nvar cloneArrayBuffer_1 = require(\"./cloneArrayBuffer\");\n\nvar TypedArrayMap = {\n  \"[object Float32Array]\": Float32Array,\n  \"[object Float64Array]\": Float64Array,\n  \"[object Int8Array]\": Int8Array,\n  \"[object Int16Array]\": Int16Array,\n  \"[object Int32Array]\": Int32Array,\n  \"[object Uint8Array]\": Uint8Array,\n  \"[object Uint16Array]\": Uint16Array,\n  \"[object Uint32Array]\": Uint32Array,\n  \"[object Uint8ClampedArray]\": Uint8ClampedArray,\n  \"[object BigInt64Array]\": BigInt64Array,\n  \"[object BigUint64Array]\": BigUint64Array\n};\n/**\r\n * Creates a clone of `typedArray`.\r\n *\r\n * @private\r\n * @param {Object} typedArray The typed array to clone.\r\n * @returns {Object} Returns the cloned typed array.\r\n */\n\nfunction cloneTypedArray(typedArray) {\n  var buffer = cloneArrayBuffer_1.cloneArrayBuffer(typedArray.buffer);\n  return new TypedArrayMap[Object.prototype.toString.call(typedArray)](buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexports.cloneTypedArray = cloneTypedArray;","map":{"version":3,"sources":["C:/Users/Spencer/source/neural-net-sim/node_modules/deep-copy-ts/dist/cloneTypedArray.js"],"names":["Object","defineProperty","exports","value","cloneTypedArray","cloneArrayBuffer_1","require","TypedArrayMap","Float32Array","Float64Array","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Uint8ClampedArray","BigInt64Array","BigUint64Array","typedArray","buffer","cloneArrayBuffer","prototype","toString","call","byteOffset","length"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;;AACA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,oBAAD,CAAhC;;AACA,IAAIC,aAAa,GAAG;AAChB,2BAAyBC,YADT;AAEhB,2BAAyBC,YAFT;AAGhB,wBAAsBC,SAHN;AAIhB,yBAAuBC,UAJP;AAKhB,yBAAuBC,UALP;AAMhB,yBAAuBC,UANP;AAOhB,0BAAwBC,WAPR;AAQhB,0BAAwBC,WARR;AAShB,gCAA8BC,iBATd;AAUhB,4BAA0BC,aAVV;AAWhB,6BAA2BC;AAXX,CAApB;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASd,eAAT,CAAyBe,UAAzB,EAAqC;AACjC,MAAIC,MAAM,GAAGf,kBAAkB,CAACgB,gBAAnB,CAAoCF,UAAU,CAACC,MAA/C,CAAb;AACA,SAAO,IAAIb,aAAa,CAACP,MAAM,CAACsB,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,UAA/B,CAAD,CAAjB,CAA8DC,MAA9D,EAAsED,UAAU,CAACM,UAAjF,EAA6FN,UAAU,CAACO,MAAxG,CAAP;AACH;;AACDxB,OAAO,CAACE,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.cloneTypedArray = void 0;\r\nvar cloneArrayBuffer_1 = require(\"./cloneArrayBuffer\");\r\nvar TypedArrayMap = {\r\n    \"[object Float32Array]\": Float32Array,\r\n    \"[object Float64Array]\": Float64Array,\r\n    \"[object Int8Array]\": Int8Array,\r\n    \"[object Int16Array]\": Int16Array,\r\n    \"[object Int32Array]\": Int32Array,\r\n    \"[object Uint8Array]\": Uint8Array,\r\n    \"[object Uint16Array]\": Uint16Array,\r\n    \"[object Uint32Array]\": Uint32Array,\r\n    \"[object Uint8ClampedArray]\": Uint8ClampedArray,\r\n    \"[object BigInt64Array]\": BigInt64Array,\r\n    \"[object BigUint64Array]\": BigUint64Array,\r\n};\r\n/**\r\n * Creates a clone of `typedArray`.\r\n *\r\n * @private\r\n * @param {Object} typedArray The typed array to clone.\r\n * @returns {Object} Returns the cloned typed array.\r\n */\r\nfunction cloneTypedArray(typedArray) {\r\n    var buffer = cloneArrayBuffer_1.cloneArrayBuffer(typedArray.buffer);\r\n    return new TypedArrayMap[Object.prototype.toString.call(typedArray)](buffer, typedArray.byteOffset, typedArray.length);\r\n}\r\nexports.cloneTypedArray = cloneTypedArray;\r\n"]},"metadata":{},"sourceType":"script"}