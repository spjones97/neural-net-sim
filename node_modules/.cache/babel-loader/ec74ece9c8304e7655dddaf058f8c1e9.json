{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Spencer\\\\source\\\\neural-net-sim\\\\typescript-app\\\\src\\\\components\\\\SubflowUI.tsx\",\n    _s = $RefreshSig$();\n\nimport \"../styles.css\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ComposedChart, Legend, Bar, ResponsiveContainer } from \"recharts\";\nimport React, { useState } from \"react\";\nimport Navigation from './Navigation';\nimport { data } from \"./Data\";\nimport { data2 } from \"./Data\";\nimport { data3 } from \"./Data\"; // import { data4 } from \"./Data\";\n// import { data5 } from \"./Data\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SubflowUI() {\n  _s();\n\n  // Set AlexNet as the default vesion\n  const [inferenceGPU, setInferenceGPU] = useState(data[0]);\n  const [inferenceCPU, setInferenceCPU] = useState(data[2]);\n  const [trainingGPU, setTrainingGPU] = useState(data[4]);\n  const [inference, setInference] = useState(data[1]);\n  const [training, setTraining] = useState(data[5]); // const [topData, setTopData] = useState(data);\n  // const [bottomData, setBottomData] = useState(data2);\n\n  const handleChange = e => {\n    switch (e.target.id) {\n      case \"AlexNet\":\n        {\n          console.log(\"alex\"); // setTopData(data);\n          // setBottomData(data2);\n\n          setInferenceGPU(data[0]);\n          setInferenceCPU(data[2]);\n          setTrainingGPU(data[4]);\n          setInference(data[1]);\n          setTraining(data[5]);\n          break;\n        }\n\n      case \"KWS\":\n        {\n          console.log(\"KWS\"); // setTopData(data3);\n          // setBottomData(data4);\n\n          setInferenceGPU(data2[0]);\n          setInferenceCPU(data2[2]);\n          setTrainingGPU(data2[4]);\n          setInference(data2[1]);\n          setTraining(data2[5]);\n          break;\n        }\n\n      case \"LeNet\":\n        {\n          console.log(\"LeNet\"); // setTopData(data);\n          // setBottomData(data5);\n\n          setInferenceGPU(data3[0]);\n          setInferenceCPU(data3[2]);\n          setTrainingGPU(data3[4]);\n          setInference(data3[1]);\n          setTraining(data3[5]);\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n  };\n\n  console.log(\"inference\");\n  console.log(inference);\n  console.log(\"inference CPU\");\n  console.log(inferenceCPU);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"DNN Models\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"DNN\",\n                  id: \"LeNet\",\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this), \"Le-Net5 (MNIST)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  onChange: handleChange,\n                  name: \"DNN\",\n                  id: \"AlexNet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this), \"AlexNet (CIFAR-10)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"DNN\",\n                  id: \"KWS\",\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this), \"KWS (GSC)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box\",\n              children: \"Image Here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"subtitle is-2\",\n              children: \"Inference (GPU)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box\",\n              children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: 700,\n                children: /*#__PURE__*/_jsxDEV(LineChart, {\n                  width: 400,\n                  height: 400,\n                  data: inferenceGPU,\n                  margin: {\n                    top: 5,\n                    right: 20,\n                    left: 10,\n                    bottom: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    stroke: \"#f5f5f5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"exec\",\n                    stroke: \"#ff7300\",\n                    yAxisId: 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"exec_ns\",\n                    stroke: \"#387908\",\n                    yAxisId: 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"subtitle is-2\",\n              children: \"Inference (CPU)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box\",\n              children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: 700,\n                children: /*#__PURE__*/_jsxDEV(LineChart, {\n                  width: 400,\n                  height: 400,\n                  data: inferenceCPU,\n                  margin: {\n                    top: 5,\n                    right: 20,\n                    left: 10,\n                    bottom: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    stroke: \"#f5f5f5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"acc\",\n                    stroke: \"#ff7300\",\n                    yAxisId: 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"acc_ns\",\n                    stroke: \"#387908\",\n                    yAxisId: 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"subtitle is-2\",\n              children: \"Training (GPU)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box\",\n              children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: 700,\n                children: /*#__PURE__*/_jsxDEV(LineChart, {\n                  width: 400,\n                  height: 400,\n                  data: trainingGPU,\n                  margin: {\n                    top: 5,\n                    right: 20,\n                    left: 10,\n                    bottom: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    stroke: \"#f5f5f5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"exec\",\n                    stroke: \"#ff7300\",\n                    yAxisId: 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"exec_ns\",\n                    stroke: \"#387908\",\n                    yAxisId: 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"subtitle is-2\",\n              children: \"Inference\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box\",\n              children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: 700,\n                children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n                  width: 500,\n                  height: 400,\n                  data: inference,\n                  margin: {\n                    top: 20,\n                    right: 20,\n                    bottom: 20,\n                    left: 20\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    stroke: \"#f5f5f5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"name\",\n                    scale: \"band\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"exec\",\n                    barSize: 20,\n                    fill: \"#413ea0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"exec_ns\",\n                    stroke: \"#ff7300\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"subtitle is-2\",\n              children: \"Training\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box\",\n              children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: 700,\n                children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n                  width: 500,\n                  height: 400,\n                  data: training,\n                  margin: {\n                    top: 20,\n                    right: 20,\n                    bottom: 20,\n                    left: 20\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    stroke: \"#f5f5f5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"name\",\n                    scale: \"band\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"acc\",\n                    barSize: 20,\n                    fill: \"#413ea0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"acc_ns\",\n                    stroke: \"#ff7300\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SubflowUI, \"Y3UT1ajM2LBfPrKcQzNZz24VSFI=\");\n\n_c = SubflowUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubflowUI\");","map":{"version":3,"sources":["C:/Users/Spencer/source/neural-net-sim/typescript-app/src/components/SubflowUI.tsx"],"names":["LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ComposedChart","Legend","Bar","ResponsiveContainer","React","useState","Navigation","data","data2","data3","SubflowUI","inferenceGPU","setInferenceGPU","inferenceCPU","setInferenceCPU","trainingGPU","setTrainingGPU","inference","setInference","training","setTraining","handleChange","e","target","id","console","log","top","right","left","bottom"],"mappings":"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","sourcesContent":["import \"../styles.css\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ComposedChart,\r\n  Legend,\r\n  Bar,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport React, { useState } from \"react\";\r\nimport Navigation from './Navigation';\r\n\r\nimport { data } from \"./Data\";\r\nimport { data2 } from \"./Data\";\r\nimport { data3 } from \"./Data\";\r\n// import { data4 } from \"./Data\";\r\n// import { data5 } from \"./Data\";\r\n\r\nexport default function SubflowUI() {\r\n\r\n  // Set AlexNet as the default vesion\r\n  const [inferenceGPU, setInferenceGPU] = useState(data[0]);\r\n  const [inferenceCPU, setInferenceCPU] = useState(data[2]);\r\n  const [trainingGPU, setTrainingGPU] = useState(data[4]);\r\n  const [inference, setInference] = useState(data[1]);\r\n  const [training, setTraining] = useState(data[5]);\r\n  // const [topData, setTopData] = useState(data);\r\n  // const [bottomData, setBottomData] = useState(data2);\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    switch (e.target.id) {\r\n      case \"AlexNet\": {\r\n        console.log(\"alex\");\r\n        // setTopData(data);\r\n        // setBottomData(data2);\r\n        setInferenceGPU(data[0]);\r\n        setInferenceCPU(data[2]);\r\n        setTrainingGPU(data[4]);\r\n        setInference(data[1]);\r\n        setTraining(data[5]);\r\n        break;\r\n      }\r\n      case \"KWS\": {\r\n        console.log(\"KWS\");\r\n        // setTopData(data3);\r\n        // setBottomData(data4);\r\n        setInferenceGPU(data2[0]);\r\n        setInferenceCPU(data2[2]);\r\n        setTrainingGPU(data2[4]);\r\n        setInference(data2[1]);\r\n        setTraining(data2[5]);\r\n        break;\r\n      }\r\n      case \"LeNet\": {\r\n        console.log(\"LeNet\");\r\n        // setTopData(data);\r\n        // setBottomData(data5);\r\n        setInferenceGPU(data3[0]);\r\n        setInferenceCPU(data3[2]);\r\n        setTrainingGPU(data3[4]);\r\n        setInference(data3[1]);\r\n        setTraining(data3[5]);\r\n        break;\r\n      }\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n  };\r\nconsole.log(\"inference\");\r\nconsole.log(inference);\r\nconsole.log(\"inference CPU\");\r\nconsole.log(inferenceCPU);\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <section className=\"section\">\r\n        <div className=\"container\">\r\n          <h1 className=\"title\">DNN Models</h1>\r\n          <div className=\"columns\">\r\n            <div className=\"column\">\r\n              <div className=\"box\">\r\n                <label className=\"radio\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"DNN\"\r\n                    id=\"LeNet\"\r\n                    onChange={handleChange}\r\n                  ></input>\r\n                  Le-Net5 (MNIST)\r\n                </label>\r\n                <br></br>\r\n                <label className=\"radio\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    onChange={handleChange}\r\n                    name=\"DNN\"\r\n                    id=\"AlexNet\"\r\n                  ></input>\r\n                  AlexNet (CIFAR-10)\r\n                </label>\r\n                <br></br>\r\n                <label className=\"radio\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"DNN\"\r\n                    id=\"KWS\"\r\n                    onChange={handleChange}\r\n                  ></input>\r\n                  KWS (GSC)\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"column\">\r\n            <div className=\"box\">Image Here</div>\r\n          </div>\r\n          <br></br>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"column\">\r\n              <h2 className=\"subtitle is-2\">Inference (GPU)</h2>{\" \"}\r\n              <div className=\"box\">\r\n              <ResponsiveContainer width='100%' height={700}>\r\n              <LineChart\r\n                  width={400}\r\n                  height={400}\r\n                  data={inferenceGPU}\r\n                  margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\r\n                >\r\n                  <XAxis dataKey=\"name\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid stroke=\"#f5f5f5\" />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"exec\"\r\n                    stroke=\"#ff7300\"\r\n                    yAxisId={0}\r\n                  />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"exec_ns\"\r\n                    stroke=\"#387908\"\r\n                    yAxisId={1}\r\n                  />\r\n                </LineChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"column\">\r\n              <h2 className=\"subtitle is-2\">Inference (CPU)</h2>{\" \"}\r\n              <div className=\"box\">\r\n              <ResponsiveContainer width='100%' height={700}>\r\n                <LineChart\r\n                  width={400}\r\n                  height={400}\r\n                  data={inferenceCPU}\r\n                  margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\r\n                >\r\n                  <XAxis dataKey=\"name\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid stroke=\"#f5f5f5\" />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"acc\"\r\n                    stroke=\"#ff7300\"\r\n                    yAxisId={0}\r\n                  />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"acc_ns\"\r\n                    stroke=\"#387908\"\r\n                    yAxisId={1}\r\n                  />\r\n                </LineChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"column\">\r\n              <h2 className=\"subtitle is-2\">Training (GPU)</h2>{\" \"}\r\n              <div className=\"box\">\r\n              <ResponsiveContainer width='100%' height={700}>\r\n                <LineChart\r\n                  width={400}\r\n                  height={400}\r\n                  data={trainingGPU}\r\n                  margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\r\n                >\r\n                  <XAxis dataKey=\"name\" />\r\n                  <Tooltip />\r\n                  <CartesianGrid stroke=\"#f5f5f5\" />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"exec\"\r\n                    stroke=\"#ff7300\"\r\n                    yAxisId={0}\r\n                  />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"exec_ns\"\r\n                    stroke=\"#387908\"\r\n                    yAxisId={1}\r\n                  />\r\n                </LineChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"column\">\r\n              <h2 className=\"subtitle is-2\">Inference</h2>{\" \"}\r\n              <div className=\"box\">\r\n              <ResponsiveContainer width='100%' height={700}>\r\n                <ComposedChart\r\n                  width={500}\r\n                  height={400}\r\n                  data={inference}\r\n                  margin={{\r\n                    top: 20,\r\n                    right: 20,\r\n                    bottom: 20,\r\n                    left: 20,\r\n                  }}\r\n                >\r\n                  <CartesianGrid stroke=\"#f5f5f5\" />\r\n                  <XAxis dataKey=\"name\" scale=\"band\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Legend />\r\n                  <Bar dataKey=\"exec\" barSize={20} fill=\"#413ea0\" />\r\n                  <Line type=\"monotone\" dataKey=\"exec_ns\" stroke=\"#ff7300\" />\r\n                </ComposedChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"column\">\r\n              <h2 className=\"subtitle is-2\">Training</h2>{\" \"}\r\n              <div className=\"box\">\r\n              <ResponsiveContainer width='100%' height={700}>\r\n                <ComposedChart\r\n                  width={500}\r\n                  height={400}\r\n                  data={training}\r\n                  margin={{\r\n                    top: 20,\r\n                    right: 20,\r\n                    bottom: 20,\r\n                    left: 20,\r\n                  }}\r\n                >\r\n                  <CartesianGrid stroke=\"#f5f5f5\" />\r\n                  <XAxis dataKey=\"name\" scale=\"band\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Legend />\r\n                  <Bar dataKey=\"acc\" barSize={20} fill=\"#413ea0\" />\r\n                  <Line type=\"monotone\" dataKey=\"acc_ns\" stroke=\"#ff7300\" />\r\n                </ComposedChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    </section>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}